name: Build C# HelloWorld

on:
  push:
    paths:
      - 'HelloWorld/**'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - 'HelloWorld/**'
      - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      - name: Build
        run: dotnet build ./HelloWorld/HelloWorld.csproj

      - name: Run HelloWorld and save output
        run: dotnet run --project ./HelloWorld/HelloWorld.csproj > output.txt

      - name: Assert output is exactly 'Hello, World!' (should succeed)
        shell: pwsh
        continue-on-error: true
        run: |
          $expected = "Hello, World!"
          $actual = Get-Content output.txt | Select-Object -First 1
          if ($actual -eq $expected) {
            "✅ Output matched: '$actual'"
            "Hello, World! test: OK" | Out-File -Append $env:GITHUB_STEP_SUMMARY
            exit 0
          } else {
            "❌ Output was '$actual', expected '$expected'"
            "Hello, World! test: NG" | Out-File -Append $env:GITHUB_STEP_SUMMARY
            exit 1
          }

      - name: Assert output is exactly 'Hello world' (should fail)
        shell: pwsh
        continue-on-error: true
        run: |
          $expected = "Hello world"
          $actual = Get-Content output.txt | Select-Object -First 1
          if ($actual -eq $expected) {
            "✅ Output matched: '$actual'"
            "Hello world test: OK" | Out-File -Append $env:GITHUB_STEP_SUMMARY
            exit 0
          } else {
            "❌ Output was '$actual', expected '$expected'"
            "Hello world test: NG" | Out-File -Append $env:GITHUB_STEP_SUMMARY
            exit 1
          }
